{
  "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "joaofernandesdev",
      "service": "foodiary-api",
      "plugins": [
        "serverless-offline"
      ],
      "provider": {
        "name": "aws",
        "region": "us-east-1",
        "runtime": "nodejs22.x",
        "architecture": "arm64",
        "environment": {
          "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
          "JWT_SECRET": "<REDACTED>",
          "OPENAI_API_KEY": "<REDACTED>",
          "BUCKET_NAME": {
            "Ref": "UploadsBucket"
          },
          "MEALS_QUEUE": {
            "Ref": "MealsQueue"
          }
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:PutObject",
                  "s3:GetObject"
                ],
                "Resource": {
                  "Fn::Sub": "${UploadsBucket.Arn}/*"
                }
              },
              {
                "Effect": "Allow",
                "Action": [
                  "sqs:SendMessage"
                ],
                "Resource": {
                  "Fn::GetAtt": [
                    "MealsQueue",
                    "Arn"
                  ]
                }
              }
            ]
          }
        },
        "stage": "dev",
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "SigninLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-signin"
              }
            },
            "SignupLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-signup"
              }
            },
            "MeLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-me"
              }
            },
            "CreateMealLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-createMeal"
              }
            },
            "ListMealsLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-listMeals"
              }
            },
            "GetMealByIdLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-getMealById"
              }
            },
            "FileUploadedEventLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-fileUploadedEvent"
              }
            },
            "ProcessMealLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-processMeal"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "foodiary-api",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "s3:PutObject",
                            "s3:GetObject"
                          ],
                          "Resource": {
                            "Fn::Sub": "${UploadsBucket.Arn}/*"
                          }
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "sqs:SendMessage"
                          ],
                          "Resource": {
                            "Fn::GetAtt": [
                              "MealsQueue",
                              "Arn"
                            ]
                          }
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "sqs:ReceiveMessage",
                            "sqs:DeleteMessage",
                            "sqs:GetQueueAttributes"
                          ],
                          "Resource": [
                            {
                              "Fn::GetAtt": [
                                "MealsQueue",
                                "Arn"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "foodiary-api",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "SigninLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signin.zip"
                },
                "Handler": "src/functions/signin.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-signin",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SigninLogGroup"
              ]
            },
            "SignupLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signup.zip"
                },
                "Handler": "src/functions/signup.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-signup",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SignupLogGroup"
              ]
            },
            "MeLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-me.zip"
                },
                "Handler": "src/functions/me.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-me",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "MeLogGroup"
              ]
            },
            "CreateMealLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-createMeal.zip"
                },
                "Handler": "src/functions/createMeal.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-createMeal",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CreateMealLogGroup"
              ]
            },
            "ListMealsLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-listMeals.zip"
                },
                "Handler": "src/functions/listMeals.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-listMeals",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ListMealsLogGroup"
              ]
            },
            "GetMealByIdLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-getMealById.zip"
                },
                "Handler": "src/functions/getMealById.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-getMealById",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "GetMealByIdLogGroup"
              ]
            },
            "FileUploadedEventLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-fileUploadedEvent.zip"
                },
                "Handler": "src/functions/fileUploadedEvent.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-fileUploadedEvent",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "FileUploadedEventLogGroup"
              ]
            },
            "ProcessMealLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-processMeal.zip"
                },
                "Handler": "src/functions/processMeal.handler",
                "Runtime": "nodejs22.x",
                "FunctionName": "foodiary-api-dev-processMeal",
                "MemorySize": 1024,
                "Timeout": 6,
                "Architectures": [
                  "arm64"
                ],
                "Environment": {
                  "Variables": {
                    "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                    "JWT_SECRET": "<REDACTED>",
                    "OPENAI_API_KEY": "<REDACTED>",
                    "BUCKET_NAME": {
                      "Ref": "UploadsBucket"
                    },
                    "MEALS_QUEUE": {
                      "Ref": "MealsQueue"
                    }
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ProcessMealLogGroup"
              ]
            },
            "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "FileUploadedEventLambdaFunction"
                },
                "CodeSha256": "vZzLiig9/5rGrHytGXozqgEV1ldCONqZuxJ6g5gnwWw="
              }
            },
            "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "MeLambdaFunction"
                },
                "CodeSha256": "oI3J1QJHWRgE5O3xQHX98TBX23sQTehfhv6MlucTPq4="
              }
            },
            "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ProcessMealLambdaFunction"
                },
                "CodeSha256": "XD8RjzQVAF6RjbzpVzWa65nPEpsLHU5JQAH/NJ511GM="
              }
            },
            "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SigninLambdaFunction"
                },
                "CodeSha256": "rfQs09/K5+9MunDkXP8K21jL3e9BAh/4QCd1ztH3X/k="
              }
            },
            "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CreateMealLambdaFunction"
                },
                "CodeSha256": "+5ffKIXmMEqPOFiCbBLawseicZmTdUh3lA0FPlAyI4U="
              }
            },
            "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SignupLambdaFunction"
                },
                "CodeSha256": "zxdHtEmXrbGvnstxNKsZcBemI2LLgATarfYe59v5efI="
              }
            },
            "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListMealsLambdaFunction"
                },
                "CodeSha256": "gDGJIMYfLPVqhsYpnA7PPgb/bUyFJ7OTveJiXaB44DI="
              }
            },
            "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "GetMealByIdLambdaFunction"
                },
                "CodeSha256": "vU8WNTE9vHBRjxXrvI4/EeaCE2FydisjOqVffX+NvJs="
              }
            },
            "FileUploadedEventCustomS31": {
              "Type": "Custom::S3",
              "Version": "1.0",
              "DependsOn": [
                "FileUploadedEventLambdaFunction",
                "CustomDashresourceDashexistingDashs3LambdaFunction"
              ],
              "Properties": {
                "ServiceToken": "<REDACTED>",
                "FunctionName": "foodiary-api-dev-fileUploadedEvent",
                "BucketName": {
                  "Ref": "UploadsBucket"
                },
                "BucketConfigs": [
                  {
                    "Event": "s3:ObjectCreated:*",
                    "Rules": []
                  }
                ],
                "ForceDeploy": 1753055666714
              }
            },
            "IamRoleCustomResourcesLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "dev",
                          "foodiary-api",
                          "custom-resources-lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "s3",
                                "",
                                "",
                                {
                                  "Ref": "UploadsBucket"
                                }
                              ]
                            ]
                          },
                          "Action": [
                            "s3:PutBucketNotification",
                            "s3:GetBucketNotification"
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Resource": {
                            "Fn::Join": [
                              ":",
                              [
                                "arn",
                                {
                                  "Ref": "AWS::Partition"
                                },
                                "lambda",
                                {
                                  "Ref": "AWS::Region"
                                },
                                {
                                  "Ref": "AWS::AccountId"
                                },
                                "function",
                                "*"
                              ]
                            ]
                          },
                          "Action": [
                            "lambda:AddPermission",
                            "lambda:RemovePermission"
                          ]
                        }
                      ]
                    }
                  }
                ]
              }
            },
            "CustomDashresourceDashexistingDashs3LambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                  "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/custom-resources.zip"
                },
                "FunctionName": "foodiary-api-dev-custom-resource-existing-s3",
                "Handler": "s3/handler.handler",
                "MemorySize": 1024,
                "Runtime": "nodejs20.x",
                "Timeout": 180,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleCustomResourcesLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "IamRoleCustomResourcesLambdaExecution",
                "CustomDashresourceDashexistingDashs3LogGroup"
              ]
            },
            "CustomDashresourceDashexistingDashs3LogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/foodiary-api-dev-custom-resource-existing-s3"
              }
            },
            "ProcessMealEventSourceMappingSQSMealsQueue": {
              "Type": "AWS::Lambda::EventSourceMapping",
              "DependsOn": [
                "IamRoleLambdaExecution"
              ],
              "Properties": {
                "BatchSize": 1,
                "EventSourceArn": {
                  "Fn::GetAtt": [
                    "MealsQueue",
                    "Arn"
                  ]
                },
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ProcessMealLambdaFunction",
                    "Arn"
                  ]
                },
                "Enabled": true
              }
            },
            "HttpApi": {
              "Type": "AWS::ApiGatewayV2::Api",
              "Properties": {
                "Name": "dev-foodiary-api",
                "ProtocolType": "HTTP"
              }
            },
            "HttpApiStage": {
              "Type": "AWS::ApiGatewayV2::Stage",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "StageName": "$default",
                "AutoDeploy": true,
                "DefaultRouteSettings": {
                  "DetailedMetricsEnabled": false
                }
              }
            },
            "SigninLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SigninLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationSignin": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "SigninLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostSignin": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /signin",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationSignin"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationSignin"
            },
            "SignupLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationSignup": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "SignupLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostSignup": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /signup",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationSignup"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationSignup"
            },
            "MeLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "MeLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationMe": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "MeLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetMe": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /me",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationMe"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationMe"
            },
            "CreateMealLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CreateMealLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationCreateMeal": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "CreateMealLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRoutePostMeals": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "POST /meals",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationCreateMeal"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationCreateMeal"
            },
            "ListMealsLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListMealsLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationListMeals": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "ListMealsLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetMeals": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /meals",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationListMeals"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationListMeals"
            },
            "GetMealByIdLambdaPermissionHttpApi": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "GetMealByIdLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "HttpApi"
                      },
                      "/*"
                    ]
                  ]
                }
              }
            },
            "HttpApiIntegrationGetMealById": {
              "Type": "AWS::ApiGatewayV2::Integration",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "IntegrationType": "AWS_PROXY",
                "IntegrationUri": {
                  "Fn::GetAtt": [
                    "GetMealByIdLambdaFunction",
                    "Arn"
                  ]
                },
                "PayloadFormatVersion": "2.0",
                "TimeoutInMillis": 30000
              }
            },
            "HttpApiRouteGetMealsMealidVar": {
              "Type": "AWS::ApiGatewayV2::Route",
              "Properties": {
                "ApiId": {
                  "Ref": "HttpApi"
                },
                "RouteKey": "GET /meals/{mealId}",
                "Target": {
                  "Fn::Join": [
                    "/",
                    [
                      "integrations",
                      {
                        "Ref": "HttpApiIntegrationGetMealById"
                      }
                    ]
                  ]
                }
              },
              "DependsOn": "HttpApiIntegrationGetMealById"
            },
            "UploadsBucket": {
              "Type": "AWS::S3::Bucket",
              "Properties": {
                "BucketName": "foodiary-uploads-juones"
              }
            },
            "MealsQueue": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "meals-queue",
                "VisibilityTimeout": 60,
                "RedrivePolicy": {
                  "maxReceiveCount": 1,
                  "deadLetterTargetArn": {
                    "Fn::GetAtt": [
                      "MealsDLQ",
                      "Arn"
                    ]
                  }
                }
              }
            },
            "MealsDLQ": {
              "Type": "AWS::SQS::Queue",
              "Properties": {
                "QueueName": "meals-queue-dlq"
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "Export": {
                "Name": "sls-foodiary-api-dev-ServerlessDeploymentBucketName"
              }
            },
            "FileUploadedEventLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-FileUploadedEventLambdaFunctionQualifiedArn"
              }
            },
            "MeLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-MeLambdaFunctionQualifiedArn"
              }
            },
            "ProcessMealLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-ProcessMealLambdaFunctionQualifiedArn"
              }
            },
            "SigninLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-SigninLambdaFunctionQualifiedArn"
              }
            },
            "CreateMealLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-CreateMealLambdaFunctionQualifiedArn"
              }
            },
            "SignupLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-SignupLambdaFunctionQualifiedArn"
              }
            },
            "ListMealsLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-ListMealsLambdaFunctionQualifiedArn"
              }
            },
            "GetMealByIdLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-GetMealByIdLambdaFunctionQualifiedArn"
              }
            },
            "HttpApiId": {
              "Description": "Id of the HTTP API",
              "Value": {
                "Ref": "HttpApi"
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-HttpApiId"
              }
            },
            "HttpApiUrl": {
              "Description": "URL of the HTTP API",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "HttpApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    }
                  ]
                ]
              },
              "Export": {
                "Name": "sls-foodiary-api-dev-HttpApiUrl"
              }
            }
          }
        },
        "vpc": {}
      },
      "package": {
        "individually": true,
        "artifactsS3KeyDirname": "serverless/foodiary-api/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
        "artifactDirectoryName": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z"
      },
      "build": {
        "esbuild": {
          "minify": true,
          "sourcemap": false
        }
      },
      "functions": {
        "signin": {
          "handler": "src/functions/signin.handler",
          "events": [
            {
              "httpApi": {
                "path": "/signin",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/signin"
            }
          ],
          "name": "foodiary-api-dev-signin",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-signin.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I"
        },
        "signup": {
          "handler": "src/functions/signup.handler",
          "events": [
            {
              "httpApi": {
                "path": "/signup",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/signup"
            }
          ],
          "name": "foodiary-api-dev-signup",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-signup.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw"
        },
        "me": {
          "handler": "src/functions/me.handler",
          "events": [
            {
              "httpApi": {
                "path": "/me",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/me"
            }
          ],
          "name": "foodiary-api-dev-me",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-me.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY"
        },
        "createMeal": {
          "handler": "src/functions/createMeal.handler",
          "events": [
            {
              "httpApi": {
                "path": "/meals",
                "method": "post"
              },
              "resolvedMethod": "POST",
              "resolvedPath": "/meals"
            }
          ],
          "name": "foodiary-api-dev-createMeal",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-createMeal.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A"
        },
        "listMeals": {
          "handler": "src/functions/listMeals.handler",
          "events": [
            {
              "httpApi": {
                "path": "/meals",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/meals"
            }
          ],
          "name": "foodiary-api-dev-listMeals",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-listMeals.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ"
        },
        "getMealById": {
          "handler": "src/functions/getMealById.handler",
          "events": [
            {
              "httpApi": {
                "path": "/meals/{mealId}",
                "method": "get"
              },
              "resolvedMethod": "GET",
              "resolvedPath": "/meals/{mealId}"
            }
          ],
          "name": "foodiary-api-dev-getMealById",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-getMealById.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s"
        },
        "fileUploadedEvent": {
          "handler": "src/functions/fileUploadedEvent.handler",
          "events": [
            {
              "s3": {
                "bucket": {
                  "Ref": "UploadsBucket"
                },
                "event": "s3:ObjectCreated:*",
                "existing": true,
                "forceDeploy": true
              }
            }
          ],
          "name": "foodiary-api-dev-fileUploadedEvent",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-fileUploadedEvent.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE"
        },
        "processMeal": {
          "handler": "src/functions/processMeal.handler",
          "events": [
            {
              "sqs": {
                "arn": {
                  "Fn::GetAtt": [
                    "MealsQueue",
                    "Arn"
                  ]
                },
                "batchSize": 1
              }
            }
          ],
          "name": "foodiary-api-dev-processMeal",
          "package": {
            "artifact": "/Users/jfernandes/Documents/Codes/jstacklab/foodiary-api/.serverless/build/foodiary-api-processMeal.zip"
          },
          "memory": 1024,
          "timeout": 6,
          "runtime": "nodejs22.x",
          "vpc": {},
          "versionLogicalId": "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8"
        }
      },
      "resources": {
        "Resources": {
          "UploadsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "foodiary-uploads-juones"
            }
          },
          "MealsQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "meals-queue",
              "VisibilityTimeout": 60,
              "RedrivePolicy": {
                "maxReceiveCount": 1,
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "MealsDLQ",
                    "Arn"
                  ]
                }
              }
            }
          },
          "MealsDLQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "meals-queue-dlq"
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "runtime": "nodejs22.x",
      "architecture": "arm64",
      "environment": {
        "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
        "JWT_SECRET": "<REDACTED>",
        "OPENAI_API_KEY": "<REDACTED>",
        "BUCKET_NAME": {
          "Ref": "UploadsBucket"
        },
        "MEALS_QUEUE": {
          "Ref": "MealsQueue"
        }
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject"
              ],
              "Resource": {
                "Fn::Sub": "${UploadsBucket.Arn}/*"
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "sqs:SendMessage"
              ],
              "Resource": {
                "Fn::GetAtt": [
                  "MealsQueue",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "SigninLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-signin"
            }
          },
          "SignupLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-signup"
            }
          },
          "MeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-me"
            }
          },
          "CreateMealLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-createMeal"
            }
          },
          "ListMealsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-listMeals"
            }
          },
          "GetMealByIdLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-getMealById"
            }
          },
          "FileUploadedEventLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-fileUploadedEvent"
            }
          },
          "ProcessMealLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-processMeal"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "foodiary-api",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "s3:PutObject",
                          "s3:GetObject"
                        ],
                        "Resource": {
                          "Fn::Sub": "${UploadsBucket.Arn}/*"
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:SendMessage"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "MealsQueue",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "MealsQueue",
                              "Arn"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "foodiary-api",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "SigninLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signin.zip"
              },
              "Handler": "src/functions/signin.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-signin",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SigninLogGroup"
            ]
          },
          "SignupLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signup.zip"
              },
              "Handler": "src/functions/signup.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-signup",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SignupLogGroup"
            ]
          },
          "MeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-me.zip"
              },
              "Handler": "src/functions/me.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-me",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MeLogGroup"
            ]
          },
          "CreateMealLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-createMeal.zip"
              },
              "Handler": "src/functions/createMeal.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-createMeal",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateMealLogGroup"
            ]
          },
          "ListMealsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-listMeals.zip"
              },
              "Handler": "src/functions/listMeals.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-listMeals",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListMealsLogGroup"
            ]
          },
          "GetMealByIdLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-getMealById.zip"
              },
              "Handler": "src/functions/getMealById.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-getMealById",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetMealByIdLogGroup"
            ]
          },
          "FileUploadedEventLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-fileUploadedEvent.zip"
              },
              "Handler": "src/functions/fileUploadedEvent.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-fileUploadedEvent",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "FileUploadedEventLogGroup"
            ]
          },
          "ProcessMealLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-processMeal.zip"
              },
              "Handler": "src/functions/processMeal.handler",
              "Runtime": "nodejs22.x",
              "FunctionName": "foodiary-api-dev-processMeal",
              "MemorySize": 1024,
              "Timeout": 6,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                  "JWT_SECRET": "<REDACTED>",
                  "OPENAI_API_KEY": "<REDACTED>",
                  "BUCKET_NAME": {
                    "Ref": "UploadsBucket"
                  },
                  "MEALS_QUEUE": {
                    "Ref": "MealsQueue"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ProcessMealLogGroup"
            ]
          },
          "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FileUploadedEventLambdaFunction"
              },
              "CodeSha256": "vZzLiig9/5rGrHytGXozqgEV1ldCONqZuxJ6g5gnwWw="
            }
          },
          "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MeLambdaFunction"
              },
              "CodeSha256": "oI3J1QJHWRgE5O3xQHX98TBX23sQTehfhv6MlucTPq4="
            }
          },
          "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ProcessMealLambdaFunction"
              },
              "CodeSha256": "XD8RjzQVAF6RjbzpVzWa65nPEpsLHU5JQAH/NJ511GM="
            }
          },
          "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SigninLambdaFunction"
              },
              "CodeSha256": "rfQs09/K5+9MunDkXP8K21jL3e9BAh/4QCd1ztH3X/k="
            }
          },
          "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateMealLambdaFunction"
              },
              "CodeSha256": "+5ffKIXmMEqPOFiCbBLawseicZmTdUh3lA0FPlAyI4U="
            }
          },
          "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SignupLambdaFunction"
              },
              "CodeSha256": "zxdHtEmXrbGvnstxNKsZcBemI2LLgATarfYe59v5efI="
            }
          },
          "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListMealsLambdaFunction"
              },
              "CodeSha256": "gDGJIMYfLPVqhsYpnA7PPgb/bUyFJ7OTveJiXaB44DI="
            }
          },
          "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetMealByIdLambdaFunction"
              },
              "CodeSha256": "vU8WNTE9vHBRjxXrvI4/EeaCE2FydisjOqVffX+NvJs="
            }
          },
          "FileUploadedEventCustomS31": {
            "Type": "Custom::S3",
            "Version": "1.0",
            "DependsOn": [
              "FileUploadedEventLambdaFunction",
              "CustomDashresourceDashexistingDashs3LambdaFunction"
            ],
            "Properties": {
              "ServiceToken": "<REDACTED>",
              "FunctionName": "foodiary-api-dev-fileUploadedEvent",
              "BucketName": {
                "Ref": "UploadsBucket"
              },
              "BucketConfigs": [
                {
                  "Event": "s3:ObjectCreated:*",
                  "Rules": []
                }
              ],
              "ForceDeploy": 1753055666714
            }
          },
          "IamRoleCustomResourcesLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "foodiary-api",
                        "custom-resources-lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "s3",
                              "",
                              "",
                              {
                                "Ref": "UploadsBucket"
                              }
                            ]
                          ]
                        },
                        "Action": [
                          "s3:PutBucketNotification",
                          "s3:GetBucketNotification"
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Resource": {
                          "Fn::Join": [
                            ":",
                            [
                              "arn",
                              {
                                "Ref": "AWS::Partition"
                              },
                              "lambda",
                              {
                                "Ref": "AWS::Region"
                              },
                              {
                                "Ref": "AWS::AccountId"
                              },
                              "function",
                              "*"
                            ]
                          ]
                        },
                        "Action": [
                          "lambda:AddPermission",
                          "lambda:RemovePermission"
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "CustomDashresourceDashexistingDashs3LambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
                "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/custom-resources.zip"
              },
              "FunctionName": "foodiary-api-dev-custom-resource-existing-s3",
              "Handler": "s3/handler.handler",
              "MemorySize": 1024,
              "Runtime": "nodejs20.x",
              "Timeout": 180,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleCustomResourcesLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IamRoleCustomResourcesLambdaExecution",
              "CustomDashresourceDashexistingDashs3LogGroup"
            ]
          },
          "CustomDashresourceDashexistingDashs3LogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/foodiary-api-dev-custom-resource-existing-s3"
            }
          },
          "ProcessMealEventSourceMappingSQSMealsQueue": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 1,
              "EventSourceArn": {
                "Fn::GetAtt": [
                  "MealsQueue",
                  "Arn"
                ]
              },
              "FunctionName": {
                "Fn::GetAtt": [
                  "ProcessMealLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-foodiary-api",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "SigninLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SigninLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignin": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "SigninLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostSignin": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /signin",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignin"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignin"
          },
          "SignupLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationSignup": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "SignupLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostSignup": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /signup",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationSignup"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationSignup"
          },
          "MeLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationMe": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "MeLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMe": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /me",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationMe"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationMe"
          },
          "CreateMealLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateMealLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationCreateMeal": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "CreateMealLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostMeals": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /meals",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationCreateMeal"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationCreateMeal"
          },
          "ListMealsLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListMealsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationListMeals": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "ListMealsLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMeals": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /meals",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationListMeals"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationListMeals"
          },
          "GetMealByIdLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetMealByIdLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGetMealById": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "Fn::GetAtt": [
                  "GetMealByIdLambdaFunction",
                  "Arn"
                ]
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetMealsMealidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /meals/{mealId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGetMealById"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGetMealById"
          },
          "UploadsBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "foodiary-uploads-juones"
            }
          },
          "MealsQueue": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "meals-queue",
              "VisibilityTimeout": 60,
              "RedrivePolicy": {
                "maxReceiveCount": 1,
                "deadLetterTargetArn": {
                  "Fn::GetAtt": [
                    "MealsDLQ",
                    "Arn"
                  ]
                }
              }
            }
          },
          "MealsDLQ": {
            "Type": "AWS::SQS::Queue",
            "Properties": {
              "QueueName": "meals-queue-dlq"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
            "Export": {
              "Name": "sls-foodiary-api-dev-ServerlessDeploymentBucketName"
            }
          },
          "FileUploadedEventLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-FileUploadedEventLambdaFunctionQualifiedArn"
            }
          },
          "MeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-MeLambdaFunctionQualifiedArn"
            }
          },
          "ProcessMealLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-ProcessMealLambdaFunctionQualifiedArn"
            }
          },
          "SigninLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-SigninLambdaFunctionQualifiedArn"
            }
          },
          "CreateMealLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-CreateMealLambdaFunctionQualifiedArn"
            }
          },
          "SignupLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-SignupLambdaFunctionQualifiedArn"
            }
          },
          "ListMealsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-ListMealsLambdaFunctionQualifiedArn"
            }
          },
          "GetMealByIdLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-GetMealByIdLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-foodiary-api-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "# \"org\" ensures this Service is used with the correct Serverless Framework Access Key.\norg: joaofernandesdev\n# \"service\" is the name of this project. This will also be added to your AWS resource names.\nservice: foodiary-api\n\nplugins: \n  - serverless-offline\n\nprovider:\n  name: aws\n  region: us-east-1\n  runtime: nodejs22.x\n  architecture: arm64\n  environment:\n    DATABASE_URL: ${env:DATABASE_URL}\n    JWT_SECRET: ${env:JWT_SECRET}\n    OPENAI_API_KEY: ${env:OPENAI_API_KEY}\n    BUCKET_NAME: !Ref UploadsBucket\n    MEALS_QUEUE: !Ref MealsQueue\n  iam:\n    role: \n      statements:\n        - Effect: Allow\n          Action:\n            - s3:PutObject\n            - s3:GetObject\n          Resource: !Sub '${UploadsBucket.Arn}/*'\n        - Effect: Allow\n          Action: sqs:SendMessage\n          Resource: !GetAtt MealsQueue.Arn\npackage:\n  individually: true\n\nbuild:\n  esbuild:\n    minify: true\n    sourcemap: false\n\nfunctions:\n  signin:\n    handler: src/functions/signin.handler\n    events:\n      - httpApi:\n          path: /signin\n          method: post\n  signup:\n    handler: src/functions/signup.handler\n    events:\n      - httpApi:\n          path: /signup\n          method: post\n  me:\n    handler: src/functions/me.handler\n    events:\n      - httpApi:\n          path: /me\n          method: get\n  createMeal:\n    handler: src/functions/createMeal.handler\n    events:\n      - httpApi:\n          path: /meals\n          method: post\n  listMeals:\n    handler: src/functions/listMeals.handler\n    events:\n      - httpApi:\n          path: /meals\n          method: get\n  getMealById:\n    handler: src/functions/getMealById.handler\n    events:\n      - httpApi:\n          path: /meals/{mealId}\n          method: get\n  fileUploadedEvent:\n    handler: src/functions/fileUploadedEvent.handler\n    events:\n      - s3:\n          bucket: !Ref UploadsBucket\n          event: s3:ObjectCreated:*\n          existing: true\n          forceDeploy: true\n  processMeal:\n    handler: src/functions/processMeal.handler\n    events:\n      - sqs:\n          arn: !GetAtt MealsQueue.Arn\n          batchSize: 1\n\nresources:\n  Resources:\n    UploadsBucket: \n      Type: AWS::S3::Bucket\n      Properties:\n        BucketName: foodiary-uploads-juones\n    MealsQueue:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: meals-queue\n        VisibilityTimeout: 60\n        RedrivePolicy:\n          maxReceiveCount: 1\n          deadLetterTargetArn: !GetAtt MealsDLQ.Arn\n    MealsDLQ:\n      Type: AWS::SQS::Queue\n      Properties:\n        QueueName: meals-queue-dlq\n          \n",
    "command": [
      "deploy"
    ],
    "options": {},
    "orgId": "ff8ab4a3-059d-4faa-b5ca-6be47e7c7865",
    "orgName": "joaofernandesdev",
    "userId": "fR0wLS3N0429qZYzy5",
    "userName": "joaofernandesdev",
    "serviceProviderAwsAccountId": "757598908369",
    "serviceProviderAwsCfStackName": "foodiary-api-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:757598908369:stack/foodiary-api-dev/cbb52f00-64c1-11f0-be40-0affc9ef382b",
    "serviceProviderAwsCfStackCreated": "2025-07-19T16:59:55.902Z",
    "serviceProviderAwsCfStackUpdated": "2025-07-20T23:46:47.431Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CreateMealLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-createMeal:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-CreateMealLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListMealsLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-listMeals:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-ListMealsLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "GetMealByIdLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-getMealById:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-GetMealByIdLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SigninLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-signin:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-SigninLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ProcessMealLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-processMeal:2",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-ProcessMealLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "FileUploadedEventLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-fileUploadedEvent:7",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-FileUploadedEventLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "MeLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-me:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-MeLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SignupLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:757598908369:function:foodiary-api-dev-signup:9",
        "Description": "Current Lambda function version",
        "ExportName": "sls-foodiary-api-dev-SignupLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "HttpApiId",
        "OutputValue": "ulm9880sdf",
        "Description": "Id of the HTTP API",
        "ExportName": "sls-foodiary-api-dev-HttpApiId"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
        "ExportName": "sls-foodiary-api-dev-ServerlessDeploymentBucketName"
      },
      {
        "OutputKey": "HttpApiUrl",
        "OutputValue": "https://ulm9880sdf.execute-api.us-east-1.amazonaws.com",
        "Description": "URL of the HTTP API",
        "ExportName": "sls-foodiary-api-dev-HttpApiUrl"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "SigninLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-signin"
          }
        },
        "SignupLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-signup"
          }
        },
        "MeLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-me"
          }
        },
        "CreateMealLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-createMeal"
          }
        },
        "ListMealsLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-listMeals"
          }
        },
        "GetMealByIdLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-getMealById"
          }
        },
        "FileUploadedEventLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-fileUploadedEvent"
          }
        },
        "ProcessMealLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-processMeal"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "foodiary-api",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "s3:PutObject",
                        "s3:GetObject"
                      ],
                      "Resource": {
                        "Fn::Sub": "${UploadsBucket.Arn}/*"
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:SendMessage"
                      ],
                      "Resource": {
                        "Fn::GetAtt": [
                          "MealsQueue",
                          "Arn"
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "sqs:ReceiveMessage",
                        "sqs:DeleteMessage",
                        "sqs:GetQueueAttributes"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "MealsQueue",
                            "Arn"
                          ]
                        }
                      ]
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "foodiary-api",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "SigninLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signin.zip"
            },
            "Handler": "src/functions/signin.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-signin",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SigninLogGroup"
          ]
        },
        "SignupLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-signup.zip"
            },
            "Handler": "src/functions/signup.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-signup",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SignupLogGroup"
          ]
        },
        "MeLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-me.zip"
            },
            "Handler": "src/functions/me.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-me",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "MeLogGroup"
          ]
        },
        "CreateMealLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-createMeal.zip"
            },
            "Handler": "src/functions/createMeal.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-createMeal",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CreateMealLogGroup"
          ]
        },
        "ListMealsLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-listMeals.zip"
            },
            "Handler": "src/functions/listMeals.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-listMeals",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ListMealsLogGroup"
          ]
        },
        "GetMealByIdLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-getMealById.zip"
            },
            "Handler": "src/functions/getMealById.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-getMealById",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "GetMealByIdLogGroup"
          ]
        },
        "FileUploadedEventLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-fileUploadedEvent.zip"
            },
            "Handler": "src/functions/fileUploadedEvent.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-fileUploadedEvent",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "FileUploadedEventLogGroup"
          ]
        },
        "ProcessMealLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/foodiary-api-processMeal.zip"
            },
            "Handler": "src/functions/processMeal.handler",
            "Runtime": "nodejs22.x",
            "FunctionName": "foodiary-api-dev-processMeal",
            "MemorySize": 1024,
            "Timeout": 6,
            "Architectures": [
              "arm64"
            ],
            "Environment": {
              "Variables": {
                "DATABASE_URL": "postgresql://neondb_owner:npg_Bm0pKlcyP7Wv@ep-small-pine-ad95pm8d-pooler.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require&channel_binding=require",
                "JWT_SECRET": "<REDACTED>",
                "OPENAI_API_KEY": "<REDACTED>",
                "BUCKET_NAME": {
                  "Ref": "UploadsBucket"
                },
                "MEALS_QUEUE": {
                  "Ref": "MealsQueue"
                }
              }
            },
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ProcessMealLogGroup"
          ]
        },
        "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "FileUploadedEventLambdaFunction"
            },
            "CodeSha256": "vZzLiig9/5rGrHytGXozqgEV1ldCONqZuxJ6g5gnwWw="
          }
        },
        "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "MeLambdaFunction"
            },
            "CodeSha256": "oI3J1QJHWRgE5O3xQHX98TBX23sQTehfhv6MlucTPq4="
          }
        },
        "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ProcessMealLambdaFunction"
            },
            "CodeSha256": "XD8RjzQVAF6RjbzpVzWa65nPEpsLHU5JQAH/NJ511GM="
          }
        },
        "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SigninLambdaFunction"
            },
            "CodeSha256": "rfQs09/K5+9MunDkXP8K21jL3e9BAh/4QCd1ztH3X/k="
          }
        },
        "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CreateMealLambdaFunction"
            },
            "CodeSha256": "+5ffKIXmMEqPOFiCbBLawseicZmTdUh3lA0FPlAyI4U="
          }
        },
        "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SignupLambdaFunction"
            },
            "CodeSha256": "zxdHtEmXrbGvnstxNKsZcBemI2LLgATarfYe59v5efI="
          }
        },
        "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ListMealsLambdaFunction"
            },
            "CodeSha256": "gDGJIMYfLPVqhsYpnA7PPgb/bUyFJ7OTveJiXaB44DI="
          }
        },
        "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "GetMealByIdLambdaFunction"
            },
            "CodeSha256": "vU8WNTE9vHBRjxXrvI4/EeaCE2FydisjOqVffX+NvJs="
          }
        },
        "FileUploadedEventCustomS31": {
          "Type": "Custom::S3",
          "Version": "1.0",
          "DependsOn": [
            "FileUploadedEventLambdaFunction",
            "CustomDashresourceDashexistingDashs3LambdaFunction"
          ],
          "Properties": {
            "ServiceToken": "<REDACTED>",
            "FunctionName": "foodiary-api-dev-fileUploadedEvent",
            "BucketName": {
              "Ref": "UploadsBucket"
            },
            "BucketConfigs": [
              {
                "Event": "s3:ObjectCreated:*",
                "Rules": []
              }
            ],
            "ForceDeploy": 1753055666714
          }
        },
        "IamRoleCustomResourcesLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "dev",
                      "foodiary-api",
                      "custom-resources-lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/foodiary-api-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Resource": {
                        "Fn::Join": [
                          ":",
                          [
                            "arn",
                            {
                              "Ref": "AWS::Partition"
                            },
                            "s3",
                            "",
                            "",
                            {
                              "Ref": "UploadsBucket"
                            }
                          ]
                        ]
                      },
                      "Action": [
                        "s3:PutBucketNotification",
                        "s3:GetBucketNotification"
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Resource": {
                        "Fn::Join": [
                          ":",
                          [
                            "arn",
                            {
                              "Ref": "AWS::Partition"
                            },
                            "lambda",
                            {
                              "Ref": "AWS::Region"
                            },
                            {
                              "Ref": "AWS::AccountId"
                            },
                            "function",
                            "*"
                          ]
                        ]
                      },
                      "Action": [
                        "lambda:AddPermission",
                        "lambda:RemovePermission"
                      ]
                    }
                  ]
                }
              }
            ]
          }
        },
        "CustomDashresourceDashexistingDashs3LambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
              "S3Key": "serverless/foodiary-api/dev/1753055666708-2025-07-20T23:54:26.708Z/custom-resources.zip"
            },
            "FunctionName": "foodiary-api-dev-custom-resource-existing-s3",
            "Handler": "s3/handler.handler",
            "MemorySize": 1024,
            "Runtime": "nodejs20.x",
            "Timeout": 180,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleCustomResourcesLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "IamRoleCustomResourcesLambdaExecution",
            "CustomDashresourceDashexistingDashs3LogGroup"
          ]
        },
        "CustomDashresourceDashexistingDashs3LogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/foodiary-api-dev-custom-resource-existing-s3"
          }
        },
        "ProcessMealEventSourceMappingSQSMealsQueue": {
          "Type": "AWS::Lambda::EventSourceMapping",
          "DependsOn": [
            "IamRoleLambdaExecution"
          ],
          "Properties": {
            "BatchSize": 1,
            "EventSourceArn": {
              "Fn::GetAtt": [
                "MealsQueue",
                "Arn"
              ]
            },
            "FunctionName": {
              "Fn::GetAtt": [
                "ProcessMealLambdaFunction",
                "Arn"
              ]
            },
            "Enabled": true
          }
        },
        "HttpApi": {
          "Type": "AWS::ApiGatewayV2::Api",
          "Properties": {
            "Name": "dev-foodiary-api",
            "ProtocolType": "HTTP"
          }
        },
        "HttpApiStage": {
          "Type": "AWS::ApiGatewayV2::Stage",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "StageName": "$default",
            "AutoDeploy": true,
            "DefaultRouteSettings": {
              "DetailedMetricsEnabled": false
            }
          }
        },
        "SigninLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SigninLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationSignin": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "SigninLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostSignin": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /signin",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationSignin"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationSignin"
        },
        "SignupLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SignupLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationSignup": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "SignupLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostSignup": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /signup",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationSignup"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationSignup"
        },
        "MeLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "MeLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationMe": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "MeLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetMe": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /me",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationMe"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationMe"
        },
        "CreateMealLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CreateMealLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationCreateMeal": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "CreateMealLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRoutePostMeals": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "POST /meals",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationCreateMeal"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationCreateMeal"
        },
        "ListMealsLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ListMealsLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationListMeals": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "ListMealsLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetMeals": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /meals",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationListMeals"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationListMeals"
        },
        "GetMealByIdLambdaPermissionHttpApi": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "GetMealByIdLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "HttpApi"
                  },
                  "/*"
                ]
              ]
            }
          }
        },
        "HttpApiIntegrationGetMealById": {
          "Type": "AWS::ApiGatewayV2::Integration",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "IntegrationType": "AWS_PROXY",
            "IntegrationUri": {
              "Fn::GetAtt": [
                "GetMealByIdLambdaFunction",
                "Arn"
              ]
            },
            "PayloadFormatVersion": "2.0",
            "TimeoutInMillis": 30000
          }
        },
        "HttpApiRouteGetMealsMealidVar": {
          "Type": "AWS::ApiGatewayV2::Route",
          "Properties": {
            "ApiId": {
              "Ref": "HttpApi"
            },
            "RouteKey": "GET /meals/{mealId}",
            "Target": {
              "Fn::Join": [
                "/",
                [
                  "integrations",
                  {
                    "Ref": "HttpApiIntegrationGetMealById"
                  }
                ]
              ]
            }
          },
          "DependsOn": "HttpApiIntegrationGetMealById"
        },
        "UploadsBucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "foodiary-uploads-juones"
          }
        },
        "MealsQueue": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "meals-queue",
            "VisibilityTimeout": 60,
            "RedrivePolicy": {
              "maxReceiveCount": 1,
              "deadLetterTargetArn": {
                "Fn::GetAtt": [
                  "MealsDLQ",
                  "Arn"
                ]
              }
            }
          }
        },
        "MealsDLQ": {
          "Type": "AWS::SQS::Queue",
          "Properties": {
            "QueueName": "meals-queue-dlq"
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-6036bb93-3f12",
          "Export": {
            "Name": "sls-foodiary-api-dev-ServerlessDeploymentBucketName"
          }
        },
        "FileUploadedEventLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "FileUploadedEventLambdaVersionzt0uPYavt2Vh843FsF6BA0qtMNMdhXHN9orvfiDVE"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-FileUploadedEventLambdaFunctionQualifiedArn"
          }
        },
        "MeLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "MeLambdaVersionn2sDJLMnXADFCsyKluqs8iiWzzqB86NSpcH8JAHIbY"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-MeLambdaFunctionQualifiedArn"
          }
        },
        "ProcessMealLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ProcessMealLambdaVersionmnOdwkqiFznu4jhvf3ZkUPY2mEiiDw8raNR8fpUTa8"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-ProcessMealLambdaFunctionQualifiedArn"
          }
        },
        "SigninLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SigninLambdaVersionyEBMtd3KuT6xSt4yNwxirwG78SfEafm7e5nX1sV6I"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-SigninLambdaFunctionQualifiedArn"
          }
        },
        "CreateMealLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CreateMealLambdaVersionv2xeoIgCQTCMpzYt4xLTJoVvqXE8sGw37AjElGHhM1A"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-CreateMealLambdaFunctionQualifiedArn"
          }
        },
        "SignupLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SignupLambdaVersionzEuAxK9WVPgxlgMgsqZExEeGHSHJHlxOykUGWxnZ5vw"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-SignupLambdaFunctionQualifiedArn"
          }
        },
        "ListMealsLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ListMealsLambdaVersionLR4hglfnJYOIkus3QtkgW7IpyFmSHqG4DLcGtkhQ"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-ListMealsLambdaFunctionQualifiedArn"
          }
        },
        "GetMealByIdLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "GetMealByIdLambdaVersionCNdJyYYvvZmJxEyGvgAHAhymopAMpRu54f9ntft65s"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-GetMealByIdLambdaFunctionQualifiedArn"
          }
        },
        "HttpApiId": {
          "Description": "Id of the HTTP API",
          "Value": {
            "Ref": "HttpApi"
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-HttpApiId"
          }
        },
        "HttpApiUrl": {
          "Description": "URL of the HTTP API",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "HttpApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                }
              ]
            ]
          },
          "Export": {
            "Name": "sls-foodiary-api-dev-HttpApiUrl"
          }
        }
      }
    }
  }
}